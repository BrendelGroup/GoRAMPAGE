####################################################################################################

ptm <- proc.time()

# ... loading the TSRchitect library:
library(TSRchitect)

### NOTE: You will need to replace WORKDIR and GoRAMPAGEhome in the following two lines by the
###       appropriate paths on your system to make this script work.
###       Also change n.cores=4 throughout to use fewer or more processors.
###
BAMDIR  <- c("./bam_filtered")

# ... initializing the tssObj object:
ExRAMPAGE <- loadTSSobj(experimentTitle="RAMPAGE Tutorial", inputDir=BAMDIR, inputType="bam", isPairedEnd=TRUE, sampleNames=c("Ex1_dm_S1","Ex1_dm_S2", "Ex1_dm_S3", "Ex1_dm_S4", "Ex1_dm_S5", "Ex2_dm_S1", "Ex2_dm_S2", "Ex2_dm_S3", "Ex2_dm_S4", "Ex2_dm_S5", "Ex3_dm_S1", "Ex3_dm_S2", "Ex3_dm_S3", "Ex3_dm_S4", "Ex3_dm_S5"), replicateIDs=c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3)) ## 

# ... converting BAM data into TSS information and attaching it to the tssObj object:
ExRAMPAGE <- bamToTSS(ExRAMPAGE)

# ... constructing the tag count per TSS data matrices:
ExRAMPAGE <- processTSS(experimentName=ExRAMPAGE, n.cores=5, tssSet="all", writeTable=TRUE)

# ... identifying TSRs (promoters):
ExRAMPAGE <- determineTSR(experimentName=ExRAMPAGE, n.cores=5, tsrSetType="replicates", tssSet="all", tagCountThreshold=25, clustDist=20, writeTable=TRUE)

# ... merging the samples
#
ExRAMPAGE <- mergeSampleData(ExRAMPAGE)

# ... identifying TSRs (promoters) from the merged samples:
ExRAMPAGE <- determineTSR(experimentName=ExRAMPAGE, n.cores=4, tsrSetType="merged", tssSet="all", tagCountThreshold=40, clustDist=20, writeTable=TRUE)

# ... now adding tag count output:
#
ExRAMPAGE <- addTagCountsToTSR(experimentName=ExRAMPAGE, tsrSetType="merged", tsrSet=4, tagCountThreshold=40, writeTable=TRUE)
proc.time() - ptm

# ... uncomment the following line if you would like to the data generated by the above
#     for future reloading with the R load command:
#save(ExRAMPAGE, file="ExRAMPAGE.RData")
